
.. _program_listing_file_plugins_FirmwareProgrammer_include_vectornav_Bootloader.hpp:

Program Listing for File Bootloader.hpp
=======================================

|exhale_lsh| :ref:`Return to documentation for file <file_plugins_FirmwareProgrammer_include_vectornav_Bootloader.hpp>` (``plugins\FirmwareProgrammer\include\vectornav\Bootloader.hpp``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #ifndef VN_BOOTLOADER_HPP_
   #define VN_BOOTLOADER_HPP_
   
   #include "vectornav/HAL/File.hpp"
   #include "vectornav/Interface/Errors.hpp"
   #include "vectornav/Interface/Sensor.hpp"
   namespace VN
   {
   namespace FirmwareProgrammer
   {
   namespace Bootloader
   {
   Errored tryEnterBootloader(Sensor* sensor, const Sensor::BaudRate firmwareBaudRate, const Sensor::BaudRate bootloaderBaudRate);
   Error autoconfigureBootloader(Sensor* sensor, const Sensor::BaudRate bootloaderBaudRate);
   
   struct BootloaderReturn
   {
       enum class FailureMode
       {
           None,
           Retry,
           Abort
       };
       ErrorAll error;
       FailureMode failureMode;
   };
   
   BootloaderReturn sendRecords(Sensor* sensor, InputFile& filePath, const size_t numLinesInFirmware);
   Error exitBootloader(Sensor* sensor, const Sensor::BaudRate firmwareBaudRate);
   
   }  // namespace Bootloader
   
   }  // namespace FirmwareProgrammer
   };  // namespace VN
   #endif  // VN_BOOTLOADER_HPP_
