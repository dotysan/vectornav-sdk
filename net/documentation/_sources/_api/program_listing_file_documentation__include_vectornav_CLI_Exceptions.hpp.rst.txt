
.. _program_listing_file_documentation__include_vectornav_CLI_Exceptions.hpp:

Program Listing for File CLI_Exceptions.hpp
===========================================

|exhale_lsh| :ref:`Return to documentation for file <file_documentation__include_vectornav_CLI_Exceptions.hpp>` (``documentation\_include\vectornav\CLI_Exceptions.hpp``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #ifndef VN_CLI_EXCEPTIONS_HPP_
   #define VN_CLI_EXCEPTIONS_HPP_
   
   #pragma managed(push, off)
   #include "vectornav/Interface/Errors.hpp"
   #pragma managed(pop)
   
   using namespace System;
   
   namespace VNSDK
   {
   
    class VnException : public Exception
   {
   public:
       VnException(VN::Error error) : Exception(gcnew String(VN::errorCodeToString(error)))
       {
       }
       VnException(VN::ErrorAll errors) : Exception(gcnew String(VN::errorCodeToString(errors)))
       {
       }
   #if (PLUGIN_FIRMWAREPROGRAMMER)
       VnException(VN::FirmwareProgrammer::ErrorBL error) : Exception(gcnew String(VN::errorCodeToString(error)))
       {
       }
   #endif
   #if (PLUGIN_CALIBRATION)
       VnException(VN::Calibration::ErrorCal error) : Exception(gcnew String(VN::errorCodeToString(error)))
       {
       }
   #endif
   };
   
   } // namespace VNSDK
   
   #endif // VN_CLI_EXCEPTIONS_HPP_
